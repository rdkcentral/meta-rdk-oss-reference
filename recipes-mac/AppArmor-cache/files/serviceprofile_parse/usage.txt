Run the script like so:
    python3 parse.py <bundle dir> <output folder>
The purpose of this script is to take configuration lines and autogenerate a profile based on that line, allowing for easier
assembly of service profiles. This happens by reading in a "bundle", which is a directory containing several files to define what
service profiles should look like.
The script operates on a few concepts:
    1. Each service profile that is non-default is represented by a cfg line specifying how it differs from default
    2. Each 'tag' in a cfg line corresponds to a profile segment with a mode suffix, either enable or disable
    3. When a tag is specified in a configuration line, the contents of that tags file are read and inserted into the profile
    4. If a tag is default but not overridden by mode, then it is inserted if specified as a default
    5. No parsing or deduplication of file entries is done, it is up to those creating the profile segments to ensure sanity
    6. Adding new tags is as simple as creating the file in exemptions/: <tag_name>_enable and <tag_name>_disable
__________Configuration Files (cfg/)____________________________
Configuration files consist of a service profile name followed by a list of tags to include in the profile:
    service_name.sp:tag_1,tag_2,tag_3
In the example above, "tag_<idx>" indicates a profile segment pulled from files in exemptions/. The script will pull
these segments in, consolidate with a default profile, then create a new service profile
Currently NO DE_DUPLICATION IS PERFORMED. We assume that the contents of the profiles is consistent and correct syntax.
The first portion of the cfg line prior to the : indicates the profile name
__________Profile Segments____________________
In exemptions/, we have a series of profile sections that are tagged via tags shown below. When a profile is assembled, the tag
is taken from the configuration file, then that file is read from exemptions/ and appended to the new profile.
The following filename syntax is required for tags to work:
    <tag name>_<tag mode>
For example:
    exemptions/etcpasswd_enable
    exemptions/etcpasswd_disable
When a profile is assembled, the tag is pulled from the config, then that file read with the corresponding mode, and the contents inserted
into the profile. This is a simple insertion at the end.
__________Defaults (defaults.cfg)_____________
Defaults are default entries specified in defaults.cfg, these entries are inserted if there is no conflicting mode. For instance if we have adefault
entry for etcpasswd_enable, then the etcpasswd_enable contents are inserted into the profile unless etcpasswd_disable is specified in a config line.
For example, the following will include the etcpasswd_enable provided it's a default:
    test_service.sp:test1_enable,test2_disable
However the following will not include it as a default since it's disabled:
    test_service.sp:test1_enable,test2_disable,etcpasswd_disable
