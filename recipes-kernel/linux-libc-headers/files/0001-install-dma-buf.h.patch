Date: Dec 1, 2022
From: Song Zhao <song.zhao@amlogic.com>
Source: AMLOGIC
Subject: install dma-buf.h to kernel header files
Signed-off-by: Song Zhao <song.zhao@amlogic.com>

Index: linux-4.9/include/uapi/linux/Kbuild
===================================================================
--- linux-4.9/include/uapi/linux/Kbuild
+++ linux-4.9/include/uapi/linux/Kbuild
@@ -104,6 +104,7 @@ header-y += dlm_device.h
 header-y += dlm.h
 header-y += dlm_netlink.h
 header-y += dlm_plock.h
+header-y += dma-buf.h
 header-y += dm-ioctl.h
 header-y += dm-log-userspace.h
 header-y += dn.h
diff --git a/linux-4.9/include/uapi/linux/dma-buf.h b/linux-4.9/include/uapi/linux/dma-buf.h
index fb0dedb7..d4643114 100644
--- linux-4.9/include/uapi/linux/dma-buf.h
+++ linux-4.9/include/uapi/linux/dma-buf.h
@@ -34,7 +34,42 @@ struct dma_buf_sync {
 #define DMA_BUF_SYNC_VALID_FLAGS_MASK \
 	(DMA_BUF_SYNC_RW | DMA_BUF_SYNC_END)
 
+/**
+ * struct dma_buf_export_sync_file - Get a sync_file from a dma-buf
+ *
+ * Userspace can perform a DMA_BUF_IOCTL_EXPORT_SYNC_FILE to retrieve the
+ * current set of fences on a dma-buf file descriptor as a sync_file.  CPU
+ * waits via poll() or other driver-specific mechanisms typically wait on
+ * whatever fences are on the dma-buf at the time the wait begins.  This
+ * is similar except that it takes a snapshot of the current fences on the
+ * dma-buf for waiting later instead of waiting immediately.  This is
+ * useful for modern graphics APIs such as Vulkan which assume an explicit
+ * synchronization model but still need to inter-operate with dma-buf.
+ */
+struct dma_buf_export_sync_file {
+	/**
+	 * @flags: Read/write flags
+	 *
+	 * Must be DMA_BUF_SYNC_READ, DMA_BUF_SYNC_WRITE, or both.
+	 *
+	 * If DMA_BUF_SYNC_READ is set and DMA_BUF_SYNC_WRITE is not set,
+	 * the returned sync file waits on any writers of the dma-buf to
+	 * complete.  Waiting on the returned sync file is equivalent to
+	 * poll() with POLLIN.
+	 *
+	 * If DMA_BUF_SYNC_WRITE is set, the returned sync file waits on
+	 * any users of the dma-buf (read or write) to complete.  Waiting
+	 * on the returned sync file is equivalent to poll() with POLLOUT.
+	 * If both DMA_BUF_SYNC_WRITE and DMA_BUF_SYNC_READ are set, this
+	 * is equivalent to just DMA_BUF_SYNC_WRITE.
+	 */
+	__u32 flags;
+	/** @fd: Returned sync file descriptor */
+	__s32 fd;
+};
+
 #define DMA_BUF_BASE		'b'
 #define DMA_BUF_IOCTL_SYNC	_IOW(DMA_BUF_BASE, 0, struct dma_buf_sync)
+#define DMA_BUF_IOCTL_EXPORT_SYNC_FILE	_IOWR(DMA_BUF_BASE, 2, struct dma_buf_export_sync_file)
 
 #endif
-- 
2.24.1

