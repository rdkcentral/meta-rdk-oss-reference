Date: Tue 07 Jun 2022
From: Indhuja Avinashi Valliammal Sivasamy <indhuja_avinashivalliammalsivasamy@comcast.com>
Subject: To add patches for curl CVEs
Source: COMCAST
Signed-off-by: Indhuja Avinashi Valliammal Sivasamy <indhuja_avinashivalliammalsivasamy@comcast.com>
Index: curl-7.69.1/lib/vtls/sectransp.c
===================================================================
--- curl-7.69.1.orig/lib/vtls/sectransp.c
+++ curl-7.69.1/lib/vtls/sectransp.c
@@ -32,6 +32,7 @@
 #include "curl_base64.h"
 #include "strtok.h"
 #include "multiif.h"
+#include "strcase.h"

 #ifdef USE_SECTRANSP

@@ -1614,24 +1615,26 @@ static CURLcode sectransp_connect_step1(
     SecIdentityRef cert_and_key = NULL;
     bool is_cert_file = is_file(ssl_cert);

-    /* User wants to authenticate with a client cert. Look for it:
-       If we detect that this is a file on disk, then let's load it.
-       Otherwise, assume that the user wants to use an identity loaded
-       from the Keychain. */
-    if(is_cert_file) {
+    /* User wants to authenticate with a client cert. Look for it. Assume that
+       the user wants to use an identity loaded from the Keychain. If not, try
+       it as a file on disk */
+    if(!is_cert_data)
+      err = CopyIdentityWithLabel(ssl_cert, &cert_and_key);
+    else
+      err = !noErr;
+    if((err != noErr) && (is_cert_file || is_cert_data)) {
       if(!SSL_SET_OPTION(cert_type))
-        infof(data, "WARNING: SSL: Certificate type not set, assuming "
-                    "PKCS#12 format.\n");
-      else if(strncmp(SSL_SET_OPTION(cert_type), "P12",
-        strlen(SSL_SET_OPTION(cert_type))) != 0)
-        infof(data, "WARNING: SSL: The Security framework only supports "
-                    "loading identities that are in PKCS#12 format.\n");
-
+        infof(data, "SSL: Certificate type not set, assuming "
+              "PKCS#12 format.");
+      else if(!strcasecompare(SSL_SET_OPTION(cert_type), "P12")) {
+        failf(data, "SSL: The Security framework only supports "
+              "loading identities that are in PKCS#12 format.");
+        return CURLE_SSL_CERTPROBLEM;
+      }
       err = CopyIdentityFromPKCS12File(ssl_cert,
-        SSL_SET_OPTION(key_passwd), &cert_and_key);
+                                       SSL_SET_OPTION(key_passwd),
+                                       &cert_and_key);
     }
-    else
-      err = CopyIdentityWithLabel(ssl_cert, &cert_and_key);

     if(err == noErr && cert_and_key) {
       SecCertificateRef cert = NULL;
