Date: Jan 13, 2023
From: sroy040 <surajeet_roy@comcast.com>
Source: COMCAST
Subject: Patch selected CVEs for the openssl component listed
Signed-off-by: sroy040 <surajeet_roy@comcast.com>
Index: openssl-1.1.1l/crypto/bn/bn_sqrt.c
===================================================================
--- openssl-1.1.1l.orig/crypto/bn/bn_sqrt.c
+++ openssl-1.1.1l/crypto/bn/bn_sqrt.c
@@ -14,7 +14,8 @@ BIGNUM *BN_mod_sqrt(BIGNUM *in, const BI
 /*
  * Returns 'ret' such that ret^2 == a (mod p), using the Tonelli/Shanks
  * algorithm (cf. Henri Cohen, "A Course in Algebraic Computational Number
- * Theory", algorithm 1.5.1). 'p' must be prime!
+ * Theory", algorithm 1.5.1). 'p' must be prime, otherwise an error or
+ * an incorrect "result" will be returned.
  */
 {
     BIGNUM *ret = in;
@@ -300,19 +301,23 @@ BIGNUM *BN_mod_sqrt(BIGNUM *in, const BI
             err = 0;
             goto vrfy;
         }
-
-        /* find smallest  i  such that  b^(2^i) = 1 */
-        i = 1;
-        if (!BN_mod_sqr(t, b, p, ctx))
-            goto end;
-        while (!BN_is_one(t)) {
-            i++;
-            if (i == e) {
-                BNerr(BN_F_BN_MOD_SQRT, BN_R_NOT_A_SQUARE);
-                goto end;
+        /* Find the smallest i, 0 < i < e, such that b^(2^i) = 1. */
+	for (i = 1; i < e; i++) {
+            if (i == 1) {
+	        if (!BN_mod_sqr(t, b, p, ctx))
+		    goto end;
+
+	    } else {
+	        if (!BN_mod_mul(t, t, t, p, ctx))
+		    goto end;
             }
-            if (!BN_mod_mul(t, t, t, p, ctx))
-                goto end;
+	    if (BN_is_one(t))
+		    break;
+	}
+	/* If not found, a is not a square or p is not prime. */
+        if (i >= e) {
+	    BNerr(BN_F_BN_MOD_SQRT, BN_R_NOT_A_SQUARE);
+	    goto end;
         }
 
         /* t := y^2^(e - i - 1) */
