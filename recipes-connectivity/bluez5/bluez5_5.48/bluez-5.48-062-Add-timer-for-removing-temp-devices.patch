Index: bluez-5.48/src/adapter.c
===================================================================
--- bluez-5.48.orig/src/adapter.c
+++ bluez-5.48/src/adapter.c
@@ -1892,7 +1892,8 @@ static void discovery_cleanup(struct btd
 
 		next = g_slist_next(l);
 
-		if (device_is_temporary(dev) && !device_is_connectable(dev)) {
+		if (device_is_temporary(dev) && !device_is_connectable(dev)
+			      && !btd_device_is_connected(dev)) {
 			DBG("Removing the device interface");
 			btd_adapter_remove_device(adapter, dev);
 		}
Index: bluez-5.48/src/device.c
===================================================================
--- bluez-5.48.orig/src/device.c
+++ bluez-5.48/src/device.c
@@ -225,6 +225,7 @@ struct btd_device {
 	bool		connectable;
 	guint		disconn_timer;
 	guint		discov_timer;
+	guint		temporary_timer;	/* Temporary/disappear timer */
 	struct browse_req *browse;		/* service discover request */
 	struct bonding_req *bonding;
 	struct authentication_req *authr;	/* authentication request */
@@ -681,6 +682,9 @@ static void device_free(gpointer user_da
 	if (device->discov_timer)
 		g_source_remove(device->discov_timer);
 
+	if (device->temporary_timer)
+		g_source_remove(device->temporary_timer);
+
 	if (device->connect)
 		dbus_message_unref(device->connect);
 
@@ -4025,12 +4029,30 @@ void device_set_le_support(struct btd_de
 	store_device_info(device);
 }
 
+static gboolean device_disappeared(gpointer user_data)
+{
+	struct btd_device *dev = user_data;
+	dev->temporary_timer = 0;
+	btd_adapter_remove_device(dev->adapter, dev);
+	return FALSE;
+}
+
 void device_update_last_seen(struct btd_device *device, uint8_t bdaddr_type)
 {
 	if (bdaddr_type == BDADDR_BREDR)
 		device->bredr_seen = time(NULL);
 	else
 		device->le_seen = time(NULL);
+	if (!device_is_temporary(device))
+		return;
+
+	/* Restart temporary timer */
+	if (device->temporary_timer)
+		g_source_remove(device->temporary_timer);
+
+	device->temporary_timer = g_timeout_add_seconds(main_opts.tmpto,
+							device_disappeared,
+							device);
 }
 
 /* It is possible that we have two device objects for the same device in
@@ -5384,12 +5406,20 @@ void btd_device_set_temporary(struct btd
 
 	device->temporary = temporary;
 
+	if (device->temporary_timer) {
+		g_source_remove(device->temporary_timer);
+		device->temporary_timer = 0;
+	}
+
 	if (temporary) {
 		if (device->bredr)
 			adapter_whitelist_remove(device->adapter, device);
 		else
 			adapter_auto_connect_remove(device->adapter, device);
 		adapter_connect_list_remove(device->adapter, device);
+		device->temporary_timer = g_timeout_add_seconds(main_opts.tmpto,
+								device_disappeared,
+								device);
 		return;
 	}
 
Index: bluez-5.48/src/hcid.h
===================================================================
--- bluez-5.48.orig/src/hcid.h
+++ bluez-5.48/src/hcid.h
@@ -40,6 +40,7 @@ struct main_opts {
 	uint32_t	class;
 	uint32_t	pairto;
 	uint32_t	discovto;
+	uint32_t	tmpto;
 	uint8_t		privacy;
 
 	gboolean	reverse_sdp;
Index: bluez-5.48/src/main.c
===================================================================
--- bluez-5.48.orig/src/main.c
+++ bluez-5.48/src/main.c
@@ -72,6 +72,7 @@
 
 #define DEFAULT_PAIRABLE_TIMEOUT       0 /* disabled */
 #define DEFAULT_DISCOVERABLE_TIMEOUT 180 /* 3 minutes */
+#define DEFAULT_TEMPORARY_TIMEOUT     30 /* 30 seconds */
 
 #define SHUTDOWN_GRACE_SECONDS 10
 
@@ -98,6 +99,7 @@ static const char *supported_options[] =
 	"MultiProfile",
 	"FastConnectable",
 	"Privacy",
+	"TemporaryTimeout",
 	NULL
 };
 
@@ -412,6 +414,16 @@ static void parse_config(GKeyFile *confi
 		g_free(str);
 	}
 
+	val = g_key_file_get_integer(config, "General",
+						"TemporaryTimeout", &err);
+	if (err) {
+		DBG("%s", err->message);
+		g_clear_error(&err);
+	} else {
+		DBG("tmpto=%d", val);
+		main_opts.tmpto = val;
+	}
+
 	str = g_key_file_get_string(config, "General", "Name", &err);
 	if (err) {
 		DBG("%s", err->message);
@@ -518,6 +530,7 @@ static void init_defaults(void)
 	main_opts.class = 0x000000;
 	main_opts.pairto = DEFAULT_PAIRABLE_TIMEOUT;
 	main_opts.discovto = DEFAULT_DISCOVERABLE_TIMEOUT;
+	main_opts.tmpto = DEFAULT_TEMPORARY_TIMEOUT;
 	main_opts.reverse_sdp = TRUE;
 	main_opts.name_resolv = TRUE;
 	main_opts.debug_keys = FALSE;
Index: bluez-5.48/src/main.conf
===================================================================
--- bluez-5.48.orig/src/main.conf
+++ bluez-5.48/src/main.conf
@@ -133,3 +133,8 @@ DefaultAttLeMtu = 23
 # Defaults to 'false'
 DelayGATTUntilBonded = true
 
+# How long to keep temporary devices around
+# The value is in seconds. Default is 30.
+# 0 = disable timer, i.e. never keep temporary devices
+# TemporaryTimeout = 30
+
