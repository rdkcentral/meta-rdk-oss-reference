Index: NetworkManager-1.43.7/src/core/nm-connectivity.c
===================================================================
--- NetworkManager-1.43.7.orig/src/core/nm-connectivity.c
+++ NetworkManager-1.43.7/src/core/nm-connectivity.c
 
@@ -247,7 +249,41 @@ cb_data_complete(NMConnectivityCheckHand
 
     nm_clear_g_source_inst(&cb_data->timeout_source);
 
-    _LOG2D("check completed: %s; %s", nm_connectivity_state_to_string(state), log_message);
+    _LOG2D("check completed: %s; %s", nm_connectivity_state_to_string(state), log_message);
+
+    /* 
+    Trigger NotifyFullyConnected D-Bus method once when connectivity becomes FULL.
+    Ensures the method is called only once by using 'already_notified' flag.
+    Check if connectivity is FULL and notification hasn't been sent yet
+    */
+    static gboolean already_notified = FALSE;
+    if (state == NM_CONNECTIVITY_FULL && !already_notified) {
+	    _LOG2D("DBG:status is full.register dbus");
+	    already_notified = TRUE;
+    g_autoptr(GError) error = NULL;
+    GDBusConnection *connection = g_bus_get_sync(G_BUS_TYPE_SYSTEM, NULL, &error);
+    _LOG2D("DBG: Trying to call D-Bus method NotifyConnected...");
+    if (connection) {
+	     g_dbus_connection_call(
+			     connection,
+			     "org.freedesktop.nm_connectivity",
+			     "/org/freedesktop/nm_connectivity",
+			     "org.freedesktop.nm_connectivity",
+			     "NotifyFullyConnected",
+			     NULL,
+			     NULL,
+			      G_DBUS_CALL_FLAGS_NONE,
+			      -1,
+			      NULL,
+			      NULL,
+			      NULL
+			     );
+    } else {
+	     _LOG2D("DBG: Failed to get system bus: %s", error->message);
+    }
+    }
+
+
 
     cb_data->callback(self, cb_data, state, cb_data->user_data);
 
