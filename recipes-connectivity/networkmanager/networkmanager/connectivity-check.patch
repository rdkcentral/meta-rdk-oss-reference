Index: NetworkManager-1.43.7/src/core/nm-connectivity.c
===================================================================
--- NetworkManager-1.43.7.orig/src/core/nm-connectivity.c
+++ NetworkManager-1.43.7/src/core/nm-connectivity.c
@@ -249,6 +249,33 @@ cb_data_complete(NMConnectivityCheckHand
 
     _LOG2D("check completed: %s; %s", nm_connectivity_state_to_string(state), log_message);
 
+    if (state == NM_CONNECTIVITY_FULL) {
+	    _LOG2D("DBG:status is full.register dbus");
+    g_autoptr(GError) error = NULL;
+    GDBusConnection *connection = g_bus_get_sync(G_BUS_TYPE_SYSTEM, NULL, &error);
+    _LOG2D("DBG: Trying to call D-Bus method NotifyConnected...");
+    if (connection) {
+	     g_dbus_connection_call(
+			     connection,
+			     "com.example.ConnectivityNotify",
+			     "/com/example/ConnectivityNotify",
+			     "com.example.ConnectivityNotify",
+			     "NotifyConnected",
+			     NULL,
+			     NULL,
+			      G_DBUS_CALL_FLAGS_NONE,
+			      -1,
+			      NULL,
+			      (GAsyncReadyCallback) on_dbus_call_finished,
+			      NULL
+			     );
+    } else {
+	     _LOG2D("DBG: Failed to get system bus: %s", error->message);
+    }
+    }
+
+
+
     cb_data->callback(self, cb_data, state, cb_data->user_data);
 
     /* Note: self might be a danling pointer at this point. It must not be used
@@ -264,6 +291,20 @@ cb_data_complete(NMConnectivityCheckHand
     g_slice_free(NMConnectivityCheckHandle, cb_data);
 }
 
+/* Callback for D-Bus method call result */
+static void
+on_dbus_call_finished(GDBusConnection *connection,
+		                      GAsyncResult    *res,
+				                            gpointer         user_data)
+{
+g_autoptr(GError) error = NULL;
+if (!g_dbus_connection_call_finish(connection, res, &error)) {
+     _LOG2D("DBG:D-Bus call to NotifyConnected failed: %s", error->message);
+} else {
+    _LOG2D("DBG:D-Bus call to NotifyConnected succeeded.");
+}						        }
+}
+
 /*****************************************************************************/
 
 #if WITH_CONCHECK
