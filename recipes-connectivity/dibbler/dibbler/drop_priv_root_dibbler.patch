Date: Fri, 24 Dec 2021 16:16:02 -0400
FromÂ  I74a3017891c60dd9ac979ccd68da0b08de4977bb Fri 24 Dec 16:16:02 2021
From: Surajeet Roy <surajeet_roy@comcast.com>
Source: Comcast
License: closed
Upstream-Status: to be submitted
Subject: Adding drop root patch to dibbler
Signed-off-by: Surajeet Roy <surajeet_roy@comcast.com>

Index: git/Port-linux/dibbler-client.cpp
===================================================================
--- git.orig/Port-linux/dibbler-client.cpp
+++ git/Port-linux/dibbler-client.cpp
@@ -21,6 +21,7 @@
 #include "ClntCfgMgr.h"
 #include <map>
 #include <pthread.h>
+#include "cap.h"
 
 using namespace std;
 
@@ -34,6 +35,7 @@ std::string WORKDIR(DEFAULT_WORKDIR);
 std::string CLNTCONF_FILE(DEFAULT_CLNTCONF_FILE);
 std::string CLNTLOG_FILE(DEFAULT_CLNTLOG_FILE);
 std::string CLNTPID_FILE(DEFAULT_CLNTPID_FILE);
+static cap_user appcaps;
 
 void signal_handler(int n) {
     if (n == SIGUSR2) {
@@ -147,7 +149,11 @@ int help() {
 int main(int argc, char * argv[])
 {
     int result = -1;
-
+    appcaps.caps = NULL;
+    appcaps.user_name = NULL;
+	if(!drop_root_priv(&appcaps)){
+	    Log(Info) << "droproot for client failed!" << LogEnd;
+	}
     // If at least one parameter (command) is not specified, then...
     if (argc < 2) {
         help();
Index: git/Port-linux/dibbler-server.cpp
===================================================================
--- git.orig/Port-linux/dibbler-server.cpp
+++ git/Port-linux/dibbler-server.cpp
@@ -16,7 +16,7 @@
 #include "Portable.h"
 #include "Logger.h"
 #include "daemon.h"
-
+#include "cap.h"
 using namespace std;
 
 TDHCPServer * ptr = 0;
@@ -24,6 +24,7 @@ TDHCPServer * ptr = 0;
 /// the default working directory
 std::string WORKDIR(DEFAULT_WORKDIR);
 
+static cap_user appcaps;
 void signal_handler(int n) {
     Log(Crit) << "Signal received. Shutting down." << LogEnd;
     ptr->stop();
@@ -98,9 +99,12 @@ int main(int argc, char * argv[])
 {
     char command[256];
     int result=-1;
-
+    appcaps.caps = NULL;
+    appcaps.user_name = NULL;
     logStart("(SERVER, Linux port)", "Server", SRVLOG_FILE);
-
+	if(!drop_root_priv(&appcaps)){
+	     Log(Info) << "droproot for server failed!" << LogEnd;
+	}
     // parse command line parameters
     if (argc>1) {
 	int len = strlen(argv[1])+1;
