##########################################
Date: Fri, 9 Aug 2019 23:52:54 +0000
From: Tarun Saha <tarun_saha@comcast.com>
Subject: [PATCH 1/1] Update-Addr-cache-for-confirmMessage
        If the requested address is valid on this interface,
        then register this address for this client (DUID).
        And update Server Address database.
Source: COMCAST 3764aa50c5a51ecee012394fa4f29dea76e915eb Mon Sep 17 00:00:00 2001
Signed-off-by: Tarun Saha <tarun_saha@comcast.com>
##########################################

Index: git/SrvMessages/SrvMsgReply.cpp
===================================================================
--- git.orig/SrvMessages/SrvMsgReply.cpp
+++ git/SrvMessages/SrvMsgReply.cpp
@@ -95,6 +95,14 @@ bool TSrvMsgReply::handleConfirmOptions(
                     continue;
                 }
                 onLink = cfgIface->confirmAddress(IATYPE_IA, optAddr->getAddr());
+		if (onLink == ADDRSTATUS_YES) {
+			/**
+			 * If the requested address is valid on this interface,
+			 * then register this address for this client (DUID).
+			 * And update Server Address database.
+			 */
+			ia->assignConfirmAddr(ClientDUID, this->getRemoteAddr(), optAddr);
+		}
                 checkCnt++;
             }
             break;
Index: git/SrvOptions/SrvOptIA_NA.cpp
===================================================================
--- git.orig/SrvOptions/SrvOptIA_NA.cpp
+++ git/SrvOptions/SrvOptIA_NA.cpp
@@ -377,6 +377,61 @@ bool TSrvOptIA_NA::assignAddr(SPtr<TIPv6
     return true;
 }
 
+/// @brief Assign requested address for this client received in CONFIRM message.
+///
+/// This method updates server address database for this client
+///
+/// @param cli_ID client's DUID received in CONFIRM message
+// @param remoteAddr client's link-local address
+/// @optAddr IA address received in CONFIRM message
+///
+/// @return void
+void TSrvOptIA_NA::assignConfirmAddr(SPtr<TDUID> cli_ID, SPtr<TIPv6Addr> remoteAddr, SPtr<TSrvOptIAAddress> optAddr)
+{
+    SPtr<TIPv6Addr> cliAddr = optAddr->getAddr();
+    uint32_t pref = 0;
+    uint32_t valid = 0;
+    T1_ = 0;
+    T2_ = 0;
+    ClntDuid = cli_ID;
+    ClntAddr = remoteAddr;
+
+    // Try to find an addr class for the requested address on this interface.
+    SPtr<TSrvCfgAddrClass> cfgClass = SrvCfgMgr().getClassByAddr(Iface, cliAddr);
+    if (cfgClass) {
+
+        // Address belongs to a class on this interaface, i.e. In-pool assignemnt.
+        // Configure IA & IA_NA parameters acoording to address class/pool.
+        pref = cfgClass->getPref(pref);
+        valid = cfgClass->getValid(valid);
+
+        T1_ = cfgClass->getT1(T1_);
+        T2_ = cfgClass->getT2(T2_);
+
+    } else {
+
+        // Address Class not found for requested address. This is an out-of-pool assignment.
+        // Need to pick the values of IA parameter from interface.
+        SPtr<TSrvCfgIface> cfgIface = SrvCfgMgr().getIfaceByID(Iface);
+        if (!cfgIface) {
+            return;
+        }
+
+        // Configure IA & IA_NA parameters acoording to interface config.
+        pref = cfgIface->getPref(pref);
+        valid = cfgIface->getValid(valid);
+
+        T1_ = cfgIface->getT1(T1_);
+        T2_ = cfgIface->getT2(T2_);
+    }
+    // Register this address as allocated to this client (DUID)
+    SrvAddrMgr().addClntAddr(ClntDuid, ClntAddr, Iface, IAID_, T1_, T2_, cliAddr, pref, valid, false);
+    SrvCfgMgr().addClntAddr(this->Iface, cliAddr);
+
+    // Add client address-DUID pair to server-cache
+    SrvAddrMgr().addCachedEntry(ClntDuid, cliAddr, IATYPE_IA);
+}
+
 /// @brief tries to find address reserved for this particular client 
 ///
 /// @return fixed address (if found)
Index: git/SrvOptions/SrvOptIA_NA.h
===================================================================
--- git.orig/SrvOptions/SrvOptIA_NA.h
+++ git/SrvOptions/SrvOptIA_NA.h
@@ -39,6 +39,7 @@ class TSrvOptIA_NA : public TOptIA_NA
     void rebind(SPtr<TSrvOptIA_NA> queryOpt,  unsigned long &addrCount);
     void release(SPtr<TSrvOptIA_NA> queryOpt, unsigned long &addrCount);
     void decline(SPtr<TSrvOptIA_NA> queryOpt, unsigned long &addrCount);
+    void assignConfirmAddr(SPtr<TDUID> cli_ID, SPtr<TIPv6Addr> remoteAddr, SPtr<TSrvOptIAAddress> optAddr);
     bool doDuties();
  private:
     bool assignCachedAddr(bool quiet);
