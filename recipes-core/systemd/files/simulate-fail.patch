Index: git/src/timesync/timesyncd-manager.c
===================================================================
--- git.orig/src/timesync/timesyncd-manager.c   2025-07-24 16:37:23.321489653 +0000
+++ git/src/timesync/timesyncd-manager.c        2025-07-24 16:56:23.995477649 +0000
@@ -556,11 +556,25 @@

         m->missed_replies = 0;

+       if (getenv("FORCE_FAILURE")) {
+               log_info("ENV Force_failureavailable");
+               force_failure = true;
+       }
+
+       if (force_failure)
+       {
+               m->request_nonce.sec=0;
+               m->request_nonce.frac=0;
+               ntpmsg.stratum = 0;
+               ntpmsg.trans_time.sec = htobe32(2208988799);
+               ntpmsg.field = 3;
+               root_distance = 10.0;
+       }
         /* check our "time cookie" (we just stored nanoseconds in the fraction field) */
         if (be32toh(ntpmsg.origin_time.sec) != m->trans_time.tv_sec + OFFSET_1900_1970 ||
             be32toh(ntpmsg.origin_time.frac) != m->trans_time.tv_nsec) {
                 log_debug("Invalid reply; not our transmit time. Ignoring.");
-                return 0;
+        //        return 0;
         m->event_timeout = sd_event_source_unref(m->event_timeout);
@@ -568,29 +582,29 @@
         if (be32toh(ntpmsg.recv_time.sec) < TIME_EPOCH + OFFSET_1900_1970 ||
             be32toh(ntpmsg.trans_time.sec) < TIME_EPOCH + OFFSET_1900_1970) {
                 log_debug("Invalid reply, returned times before epoch. Ignoring.");
-                return manager_connect(m);
+          //      return manager_connect(m);
         }

         if (NTP_FIELD_LEAP(ntpmsg.field) == NTP_LEAP_NOTINSYNC ||
             ntpmsg.stratum == 0 || ntpmsg.stratum >= 16) {
                 log_debug("Server is not synchronized. Disconnecting.");
-                return manager_connect(m);
+            //    return manager_connect(m);
         }

         if (!IN_SET(NTP_FIELD_VERSION(ntpmsg.field), 3, 4)) {
                 log_debug("Response NTPv%d. Disconnecting.", NTP_FIELD_VERSION(ntpmsg.field));
-                return manager_connect(m);
+              //  return manager_connect(m);                                                                                                      
         }                                                                                                                                         
                                                                                                                                                   
         if (NTP_FIELD_MODE(ntpmsg.field) != NTP_MODE_SERVER) {                                                                                    
                 log_debug("Unsupported mode %d. Disconnecting.", NTP_FIELD_MODE(ntpmsg.field));                                                   
-                return manager_connect(m);                                                                                                        
+                //return manager_connect(m);                                                                                                      
         }                                      }                                                                                                                                         
                                                                                                                                                   
         root_distance = ntp_ts_short_to_d(&ntpmsg.root_delay) / 2 + ntp_ts_short_to_d(&ntpmsg.root_dispersion);                                   
         if (root_distance > NTP_MAX_ROOT_DISTANCE) {                                                                                              
                 log_debug("Server has too large root distance. Disconnecting.");                                                                  
-                return manager_connect(m);                                                                                                        
+              //  return manager_connect(m);                                                                                                      
         }                                                                                                                                         
                                                                                                                                                   
         /* valid packet */                                                                                                                        
                              
