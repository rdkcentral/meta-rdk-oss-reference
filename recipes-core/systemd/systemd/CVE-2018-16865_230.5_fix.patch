From 9f111ea51f4fe62cd8cd9ec88993118cf1a3cde2 Mon Sep 17 00:00:00 2001
From: skondu363 <Srihariraghava_konduritirumala@comcast.com>
Date: Tue, 8 Oct 2024 09:51:47 +0000
Subject: [PATCH]
From: srihariraghava_konduritirumala@comcast.com
Source: upstream
        [https://github.com/systemd/systemd/commit/052c57f132f04a3cf4148f87561618da1a6908b4#diff-518cb7142e1c9df6d1c34ef436bc31d2d4fc215f3991ff5d3ac584be7559b363R27 & https://github.com/systemd/systemd/commit/ef4d6abe7c7fab6cbff975b32e76b09feee56074#diff-139a85d6a81c78d08709e713018dfd1556fdc0f873a2b99224ff329dc2f46909R25]
CVE : CVE-2018-16865

Signed-off-by: skondu363 <Srihariraghava_konduritirumala@comcast.com>
---
 src/journal-remote/journal-remote-parse.c |  5 ++++-
 src/journal-remote/journal-remote-write.c |  6 ++++++
 src/journal-remote/journal-remote.c       | 14 ++++++++++++--
 src/journal/journald-native.c             |  8 ++++++++
 4 files changed, 30 insertions(+), 3 deletions(-)

diff --git a/src/journal-remote/journal-remote-parse.c b/src/journal-remote/journal-remote-parse.c
index 9ba9ee3fc0..a84d833345 100644
--- a/src/journal-remote/journal-remote-parse.c
+++ b/src/journal-remote/journal-remote-parse.c
@@ -26,6 +26,9 @@
 
 #define LINE_CHUNK 8*1024u
 
+/* The maximum number of fields in an entry */
+#define ENTRY_FIELD_COUNT_MAX 1024
+
 void source_free(RemoteSource *source) {
         if (!source)
                 return;
@@ -109,7 +112,7 @@ static int get_line(RemoteSource *source, char **line, size_t *size) {
                 source->scanned = source->filled;
                 if (source->scanned >= DATA_SIZE_MAX) {
                         log_error("Entry is bigger than %u bytes.", DATA_SIZE_MAX);
-                        return -E2BIG;
+                        return -ENOBUFS;
                 }
 
                 if (source->passive_fd)
diff --git a/src/journal-remote/journal-remote-write.c b/src/journal-remote/journal-remote-write.c
index 7bba52566e..585f1cbe95 100644
--- a/src/journal-remote/journal-remote-write.c
+++ b/src/journal-remote/journal-remote-write.c
@@ -20,7 +20,13 @@
 #include "alloc-util.h"
 #include "journal-remote.h"
 
+/* The maximum number of fields in an entry */
+#define ENTRY_FIELD_COUNT_MAX 1024
+
 int iovw_put(struct iovec_wrapper *iovw, void* data, size_t len) {
+	if (iovw->count >= ENTRY_FIELD_COUNT_MAX)
+                return -E2BIG;
+
         if (!GREEDY_REALLOC(iovw->iovec, iovw->size_bytes, iovw->count + 1))
                 return log_oom();
 
diff --git a/src/journal-remote/journal-remote.c b/src/journal-remote/journal-remote.c
index 35a1e55f9e..fbf52d5727 100644
--- a/src/journal-remote/journal-remote.c
+++ b/src/journal-remote/journal-remote.c
@@ -59,6 +59,9 @@
 #define CERT_FILE     CERTIFICATE_ROOT "/certs/journal-remote.pem"
 #define TRUST_FILE    CERTIFICATE_ROOT "/ca/trusted.pem"
 
+/* The maximum number of fields in an entry */
+#define ENTRY_FIELD_COUNT_MAX 1024
+
 static char* arg_url = NULL;
 static char* arg_getter = NULL;
 static char* arg_listen_raw = NULL;
@@ -526,11 +529,15 @@ static int process_http_upload(
                         break;
                 else if (r < 0) {
                         log_warning("Failed to process data for connection %p", connection);
-                        if (r == -E2BIG)
+                        if (r == -ENOBUFS)
                                 return mhd_respondf(connection,
                                                     MHD_HTTP_REQUEST_ENTITY_TOO_LARGE,
-                                                    "Entry is too large, maximum is %u bytes.\n",
+                                                    "Entry is large, maximum is %u bytes.\n",
                                                     DATA_SIZE_MAX);
+			else if (r == -E2BIG)
+                                return mhd_respondf(connection,
+						    MHD_HTTP_BAD_REQUEST,
+						    "Entry with more fields than the maximum of %u, aborting connection %p.",ENTRY_FIELD_COUNT_MAX, connection);
                         else
                                 return mhd_respondf(connection,
                                                     MHD_HTTP_UNPROCESSABLE_ENTITY,
@@ -1056,6 +1063,9 @@ static int handle_raw_source(sd_event_source *event,
                 log_debug("%zu active sources remaining", s->active);
                 return 0;
         } else if (r == -E2BIG) {
+		log_notice("Entry with too many fields, skipped");
+                return 1;
+        } else if (r == -ENOBUFS) {
                 log_notice_errno(E2BIG, "Entry too big, skipped");
                 return 1;
         } else if (r == -EAGAIN) {
diff --git a/src/journal/journald-native.c b/src/journal/journald-native.c
index 8529d11212..b2d7d73e59 100644
--- a/src/journal/journald-native.c
+++ b/src/journal/journald-native.c
@@ -41,6 +41,9 @@
 #include "socket-util.h"
 #include "string-util.h"
 
+/* The maximum number of fields in an entry */
+#define ENTRY_FIELD_COUNT_MAX 1024
+
 bool valid_user_field(const char *p, size_t l, bool allow_protected) {
         const char *a;
 
@@ -189,6 +192,11 @@ static int server_process_entry(
                 }
 
                 /* A property follows */
+                if (n > ENTRY_FIELD_COUNT_MAX) {
+                        log_debug("Received an entry that has more than " STRINGIFY(ENTRY_FIELD_COUNT_MAX) " fields, ignoring entry.");
+                        r = 1;
+                        goto finish;
+                }
 
                 /* n existing properties, 1 new, +1 for _TRANSPORT */
                 if (!GREEDY_REALLOC(iovec, m, n + 2 + N_IOVEC_META_FIELDS + N_IOVEC_OBJECT_FIELDS)) {
